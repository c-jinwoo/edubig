<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.webapp.common.mapper.CommonEmsMapper">

	<resultMap id="syMailManTplClobMap" type="emap">
       	<result property="CONTENT" column="CONTENT" jdbcType="CLOB" javaType="java.lang.String"/>
    </resultMap>
    
    <!-- 메일 템플릿 조회 -->
	<select id="getSyMailTplInfo" resultMap="syMailManTplClobMap" parameterType="String"> 
		SELECT 
			TITLE, CONTENT  
		FROM 
			LMS_SY_MAIL_TPL 
		WHERE 
			TPL_UID = #{TPL_UID} 
		AND 
			USEYN='Y'   
		AND   
			ROWNUM =  1  
	</select> 
	
	
	<!-- SMS 템플릿 조회 -->
	<select id="getSySmsTplInfo" parameterType="String" resultType="emap">
     SELECT 
					CONTENT  
				FROM 
					LMS_SY_SMS_TPL 
				WHERE 
					TPL_UID = #{tplUid} 
				AND 
					USEYN='Y'   
				AND   
					ROWNUM =  1   
	</select> 

    <!-- MMS 발송 등록  -->
    <insert id="insertEmTranMms" parameterType="com.webapp.common.vo.SendMsgVO">
        <selectKey keyProperty="mmsSeq" resultType="java.lang.Integer" order="BEFORE">
            SELECT NVL(MAX(MMS_SEQ),0)+1 mmsSeq
              FROM EM_TRAN_MMS
        </selectKey>
        INSERT INTO EM_TRAN_MMS 
            ( 
                MMS_SEQ,
                FILE_CNT,
                MMS_BODY,
                MMS_SUBJECT  
             )
        VALUES
             (  
                #{mmsSeq}, 
                0, 
                #{message},
                null    <!-- 메세지 타이틀 -->
             )
    </insert>
    
    <!-- SMS 발송 등록  -->
    <insert id="insertSendMessageLog" parameterType="dmap">
        INSERT INTO LMS_SY_SMS_LOG 
            ( 
                SEQ,
                REC_USERNAME,
                REC_USERID,
                REC_HP,
                SUMMARY,
                SEND_DATE,
                CALLBACK,
                RESERVEYN,
            	TRAN_TYPE,
            	STATUS
             )
        VALUES
             (  
                (SELECT NVL(MAX(SEQ),0)+1 FROM LMS_SY_SMS_LOG),
                #{userName}, 
                #{userId},
                #{mobile},
                #{summary},
                SYSDATE,
                #{callBack},
                'N',
                #{tranType},
                '1'
             )
    </insert>
    
    <!-- Email 발송 등록  -->
    <insert id="insertSendEmailLog" parameterType="dmap">
    	INSERT INTO LMS_SY_MAIL_LOG 
            ( 
                MAIL_SEQ,
                SENDER_USERNAME,
                SENDER_EMAIL,
                SEND_DATE,
                TITLE,
                SUMMARY
             )
        VALUES
             (  
                (SELECT NVL(MAX(MAIL_SEQ),0)+1 FROM LMS_SY_MAIL_LOG),
                #{senderName}, 
                #{senderEmail},
                SYSDATE,
                #{title},
                #{summary}
             )
    </insert>
    
    <!-- SMS 발송 등록 -->
    <insert id="insertSmsData" parameterType="dmap">
    	INSERT INTO MCS_AGENT.SDK_SMS_SEND
		    (MSG_ID
		    , USER_ID
		    , SUBJECT
		    , SMS_MSG
		    , CALLBACK_URL
		    , NOW_DATE
		    , SEND_DATE
		    , CALLBACK
		    , DEST_INFO
		    , DEST_COUNT
		    ) VALUES (
		     MCS_AGENT.SDK_SMS_SEQ.nextval
		     ,'SMS_TEST_ID'
		     , ''
		     , #{summary}
		     , ''
		     , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		     , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		     , #{callBack}
		     , #{userInfo}
		     , 1)
    </insert>
	
	<!-- 메세제 발송 로그 등록  -->
	<insert id="insertSySmsLog" parameterType="com.webapp.common.vo.SendMsgVO">
	 	INSERT INTO LMS_SY_SMS_LOG 
	 		( 
	 			SEQ, REC_USERNAME, REC_USERID,
	 			REC_HP, STATUS, SEND_TYPE,
	 			
	 			SUMMARY,
	 			
	 			SEND_DATE,
	 			
	 			SEND_USERID,
	 			CALLBACK,
	 			RESERVEYN,
	 			RESERVE_DATE,
                TRAN_TYPE,
                TRAN_PR
             )
		VALUES
			 (  
			 	(SELECT NVL(MAX(SEQ),0)+1 AS MAX FROM LMS_SY_SMS_LOG), 
			 	#{recUsername}, #{recUserid}, 
			 	#{rcvphns}, #{resultCode}, #{sendType}, 
			 	
			 	#{message}, 
			 	
			 	SYSDATE, 
			 	
			 	#{sendUserid}, 
			 	#{callback}, 
			 	#{isreserve},
			 	 TO_DATE( #{reserveDate} ,'yyyy-mm-dd hh24:mi:ss' ),
                #{tranType},
                #{tranPr}
			 )
	</insert>

	
	<select id="getMsgBatchLogCnt" parameterType="string" resultType="int">
   	  	SELECT COUNT(1) FROM LMS_SY_MSG_BATCH_LOG WHERE YMD = #{nowDate}
	</select> 
	
	
	<select id="getMsgBatchLeCourseUserList" parameterType="string" resultType="emap">
		SELECT 
			B.SEQ_TITLE
			, D.USERID
			, D.USERNAME
			, D.MOBILE
			, D.EMAIL
			, TO_CHAR(B.STUDY_SDATE, 'YYYY-MM-DD') AS STUDY_SDATE
            , TO_CHAR(B.STUDY_EDATE, 'YYYY-MM-DD') AS STUDY_EDATE
		FROM
		LMS_ED_COURSE A, LMS_ED_COURSE_SEQ B, LMS_LE_COURSE_USER C, VW_LMS_CT_USER D
		WHERE A.COURSENO = B.COURSENO
		AND   B.CSEQNO   = C.CSEQNO 
		AND   C.USERNO   = D.USERNO
		AND   A.MT_CTYPE_CODE = 'DAAA00'       				 <!-- 이러닝 과정 -->
		AND   B.MT_CSEQ_STATUS_CODE <![CDATA[<>]]>  'DEDA00' <!-- 폐강이 아닌경우만 -->
		AND   C.USEYN = 'Y'                     			 <!-- 수강 승인인 회원만 -->

    <choose>
        <when test="_parameter != null and _parameter != ''">
            <if test="_parameter == '201'">
                AND TO_CHAR(STUDY_SDATE, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD')
            </if>
            <if test="_parameter == '202'">
                AND TO_CHAR(STUDY_SDATE+TRUNC((STUDY_EDATE-STUDY_SDATE)/2),'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD')
            </if>
            <if test="_parameter == '203'">
                AND TO_CHAR(STUDY_EDATE, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD')
            </if>
        </when>
        <otherwise>
                AND TO_CHAR(STUDY_EDATE, 'YYYYMMDD') = '99991231'
        </otherwise>
    </choose>
		

	</select>

	<insert id="insertMsgBatchLog" parameterType="dmap">
		INSERT INTO LMS_SY_MSG_BATCH_LOG (YMD, SVRCD, SDATE, EDATE, MAIL_CNT, SMS_CNT, LOG)
		VALUES(#{ymd},#{svrcd},TO_DATE(#{sdate}, 'YYYY-MM-DD HH24:MI:SS'),TO_DATE(#{edate}, 'YYYY-MM-DD HH24:MI:SS'),#{mailCnt},#{smsCnt},#{logFlag})
	</insert>
    
    <!-- 발송순번 -->
    <select id="getSyMailLogMailSeqMaxInfo" resultType="int" >
        SELECT NVL(MAX(MAIL_SEQ),0)+1 AS MAX   
          FROM LMS_SY_MAIL_LOG 
    </select>
    
    <!-- 발송 등록  -->
    <insert id="insertSyMailLog" parameterType="com.webapp.common.vo.SendMailVO">
        <selectKey keyProperty="mailSeq" resultType="int" order="BEFORE">
            SELECT NVL(MAX(MAIL_SEQ),0)+1   
              FROM LMS_SY_MAIL_LOG
        </selectKey>
        INSERT INTO LMS_SY_MAIL_LOG 
            ( 
                MAIL_SEQ
                , WRITER_USERID
                , WRITER_USERNAME
                , WRITER_IP
                , SENDER_USERNAME
                , SENDER_EMAIL
                , SEND_DATE
                , TITLE
                , SUMMARY
                , TPL_UID 
            )
        VALUES 
            (  
                #{mailSeq}
                , #{writerUserid}
                , #{writerUsername}
                , #{writerIp}
                , #{sender}
                , #{sender_alias}
                , SYSDATE
                , #{title}
                , #{content}
                , #{tplUid} 
            )
    </insert>

    <insert id="insertSyMailLogRec" parameterType="com.webapp.common.vo.SendMailVO">
        INSERT INTO LMS_SY_MAIL_REC 
            (
                MAIL_SEQ
                ,REC_SEQ
                ,REC_USERNAME
                ,REC_USERID
                ,REC_EMAIL
                ,RECYN
                ,REC_DATE
                ,SUCCCYN
                ,SUMMARY 
            )
        VALUES 
            (
                #{mailSeq}
                , (SELECT NVL(MAX(REC_SEQ),0)+1 AS MAX  FROM LMS_SY_MAIL_REC   WHERE MAIL_SEQ = #{mailSeq}), #{recUsername}, #{recUserid}, #{recEmail}, #{recyn}, SYSDATE, #{succcyn}, #{content}  
            )
    </insert>
	
</mapper>