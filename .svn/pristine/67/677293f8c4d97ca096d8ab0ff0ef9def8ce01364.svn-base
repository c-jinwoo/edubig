package com.webapp.ccedu.ctrl;

import java.io.PrintWriter;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.google.gson.Gson;
import com.sangs.support.DataMap;
import com.sangs.support.EduMap;
import com.sangs.support.FrontException;
import com.sangs.support.SangsProperties;
import com.webapp.academy.service.CommonService;
import com.webapp.ccedu.service.OnlineBookService;
import com.webapp.ccedu.service.OnlineEducationService;
import com.webapp.classdesk.service.ClassdeskUserProgressService;
import com.sangs.util.AllatUtil;

import java.util.Date;
import java.text.SimpleDateFormat;
import java.text.ParseException;
/**
 * Description : 회원 관련 컨트롤러
 *
 * Modification Information
 * 수정일			수정자			수정내용
 * -------		-----------------------------------
 * 2020.09.29	CSLAB		최초작성
 *
 */

@Controller
public class OnlineEducationController {

    @Resource(name = "onlineEducationService")
    private OnlineEducationService onlineEducationService;

    @Resource(name = "commonService")
    private CommonService   commonService;
    
    @Resource(name = "classdeskUserProgressService")
    private ClassdeskUserProgressService classdeskUserProgressService;
    
    @Resource(name = "onlineBookService")
    private OnlineBookService onlineBookService; 

    /**
     * 온라인교육 > 결제페이지
     * @param request
     * @param model
     * @param rMap
     * @return
     * @throws FrontException
     */
    // TODO: 일반교육 > 온라인 과정 결제페이지
    @RequestMapping(value = "/ccedu/online/onlinePayment.do")
    public String onlinePayment(HttpServletRequest request, HttpServletResponse res, DataMap rMap) throws FrontException {
    	 
    	/* 비로그인 시 */
	  if ("N".equals(rMap.getString("SES_ISLOGIN")) || ("").equals(rMap.getString("SES_USERID"))) {// 로그인 안했다면
		  request.setAttribute("msg", "로그인이 필요한 페이지 입니다.");
		  request.setAttribute("url", "/academy/common/login.do");
		  return "forward:/common/msgForward.do";
	  }
	    /* URL 강제접근 시 */
	  if(rMap.getString("mtScName").equals("") || rMap.getString("mtScName") == null){
		  request.setAttribute("msg", "잘못된 접근입니다.");
		  request.setAttribute("url", "/ccedu/online/onlineDetailList.do?mtSubCode=SC1001");
		  return "forward:/common/msgForward.do";
	  }
	      
		try {          
			request.setAttribute("REQUEST_DATA", rMap);

            String mtCode = "SC";        
            request.setAttribute("courseList",commonService.getToSangsCodes(mtCode));
            request.setAttribute("bookInfo",onlineBookService.getCourseBookInfo(rMap));
		} catch (Exception e) {
		    throw new FrontException(e);
		}		
		return "ccedu/online/online_payment";        
    }
    /**
     * 신청진행 Ajax
     * @param request
     * @param model
     * @param rMap
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/ccedu/online/ajaxFindLastOrderIdx.do")
    public void findLastOrderIdx(HttpServletRequest request, HttpServletResponse res, DataMap rMap) throws Exception {
        res.setContentType("text/html; charset=utf-8");
        PrintWriter out = res.getWriter();
        Gson gson = new Gson();
        String json = null ;

        json =  gson.toJson(onlineEducationService.selectPaymentLastOrder());       

        out.print(json);
        out.flush();
        out.close();        
    }
    @RequestMapping(value = "/ccedu/online/onlinePayApprove.do")
    public String onlinePayApprove(HttpServletRequest request, HttpServletResponse res, DataMap rMap) throws FrontException {

        request.setAttribute("REQUEST_DATA", rMap);
        try {
			onlineEducationService.insertPayment(rMap);
        	String orderno = rMap.getString("allat_order_no");
        	
        	Integer price = onlineEducationService.getPaymentPrice(orderno);
        	request.setAttribute("price",Integer.toString(price));  
		} catch (Exception e) {
			System.out.println(e);
		}
        
        return "ccedu/online/allat_approval";
    }
    @RequestMapping(value = "/ccedu/online/onlinePayReceive.do")
    public String onlinePayReceive(HttpServletRequest request, HttpServletResponse res, DataMap rMap) throws FrontException {
        request.setAttribute("REQUEST_DATA", rMap);
        return "ccedu/online/allat_receive";
    }
    
    /**
     * 온라인교육 > 교육소개
     * @param request
     * @param model
     * @param rMap
     * @return
     * @throws FrontException
     */
    // TODO: 회원가입 > 회원구분
    @RequestMapping(value = "/ccedu/online/onlineEducationInfo.do")
    public String memberJoinType(HttpServletRequest request, HttpServletResponse res, DataMap rMap) throws FrontException {
        request.setAttribute("REQUEST_DATA", rMap);
        return "ccedu/online/online_education_info";
    }
    
    
    /**
     * 온라인교육 > 교육소개
     * @param request
     * @param model
     * @param rMap
     * @return
     * @throws FrontException
     */
    // TODO: 회원가입 > 회원구분
    @RequestMapping(value = "/ccedu/online/youtube.do")
    public String youtube(HttpServletRequest request, HttpServletResponse res, DataMap rMap) throws FrontException {
        request.setAttribute("REQUEST_DATA", rMap);
        return "ccedu/online/online_youtube";
    }
    
    /**
     *  온라인교육 > 과정목록
     * @param request
     * @param model
     * @param rMap
     * @return
     * @throws Exception 
     */
    // TODO: 일반교육 > 온라인교육
    @RequestMapping(value = "/ccedu/online/onlineDetailList.do")
    public String onlineDetailList(HttpServletRequest request, HttpServletResponse res, DataMap rMap) throws Exception {
        try {
            
            /*if(rMap.getString("mtScCode").equals("")){
//                request.setAttribute("msg", "잘못된 경로로 접근하셨습니다."); 
//                request.setAttribute("url", "/ccedu/online/onlineEducationInfo.do"); 
//                return "forward:/common/msgForward.do";
                rMap.setString("mtScCode", "SC1001");
            }*/
        	rMap.setString("mtScCode",rMap.getString("mtSubCode"));            
            
            /*rMap.setString("mtCseqStatusCode", "DEAA00");*/        
            rMap.setString("mtCseqStatusCode", "DEDC00");
            
            String mtCode = "SC";        
            request.setAttribute("courseList",commonService.getToSangsCodes(mtCode));
            
            request.setAttribute("title", onlineEducationService.selectOnlineDetailTitle((String)rMap.getString("mtScCode")));
            request.setAttribute("listData", onlineEducationService.selectOnlineDetailList(rMap));           
            
            request.setAttribute("REQUEST_DATA", rMap);
        } catch (Exception e) {
            throw new FrontException(e);
        }
        
        return "ccedu/online/online_detail_list";
    }
    
    /**
     * 온라인교육 >  과정목록 ( 더 보기)
     * @param req
     * @param rMap
     * @throws Exception
     */
    // TODO: 집합교육일정표 달력
    @RequestMapping(value = "/ccedu/online/ajaxOnlineDetailList.do")
    public void ajaxOnlineDetailList(HttpServletRequest request, HttpServletResponse res, DataMap rMap) throws Exception {
        res.setContentType("text/html; charset=utf-8");
        PrintWriter out = res.getWriter();
        Gson gson = new Gson();
        String json = null ;
        
        
        try {
            
            json =  gson.toJson(onlineEducationService.selectOnlineDetailList(rMap));
            
        }catch (Exception ex) {
            json =  gson.toJson("FAIL");
        }
        out.print(json);
        out.flush();
        out.close();
    }
    
    
    /**
     * 온라인교육 > 과정 상세
     * @param request
     * @param model
     * @param rMap
     * @return
     * @throws FrontException
     */
    // TODO: 일반교육 > 온라인 과정 신청 폼
    @RequestMapping(value = "/ccedu/online/onlineDetailForm.do")
    public String onlineDetailForm(HttpServletRequest request, HttpServletResponse res, DataMap rMap) throws FrontException {

        try {
                
//            if ("N".equals(rMap.getString("SES_ISLOGIN")) || ("").equals(rMap.getString("SES_USERID"))) {// 로그인 안했다면
//                request.setAttribute("msg", "로그인이 필요한 페이지 입니다.");
//                request.setAttribute("url", "/academy/common/login.do");
//                return "forward:/common/msgForward.do";
//            }
                        
            EduMap eMap = onlineEducationService.getEdCourseSeqInfo(rMap);
            
            //데이터값 없을 경우 main 이동
            if(eMap == null){
            	request.setAttribute("url", "/ccedu/main/main.do");
            	return "forward:/common/msgForward.do";
            }
            
            request.setAttribute("rowData", eMap);
            rMap.setString("applyYn", "N"); 
            if(("").equals(rMap.getString("SES_USERID"))) {
                rMap.setInt("userNo", rMap.getInt("SES_USERNO"));
                EduMap uMap = commonService.getUserInfo(rMap);
                request.setAttribute("userData", uMap);
                
                if(uMap != null){
                    rMap.setString("applyYn", "Y");
                }
            }
            
            //비회원일 경우
            /*if(eMap.getString("MT_SC_CODE").equals("SC5001")){
                
                rMap.setInt("SES_COURSENO", eMap.getInt("COURSENO"));
                List<EduMap> resultList =  classdeskUserProgressService.getEdCourseTreeList(rMap);
                
                if(resultList != null){
                    rMap.setString("FILE_PATH", (String) resultList.get(0).get("FILE_PATH"));
                    rMap.setString("MEDIA_FILE", (String) resultList.get(0).get("MEDIA_FILE"));
                }
                
            }*/

            rMap.setInt("SES_COURSENO", eMap.getInt("COURSENO"));
            List<EduMap> resultList =  classdeskUserProgressService.getEdCourseTreeList(rMap);
            
            if(resultList != null){
                rMap.setString("FILE_PATH", (String) resultList.get(0).get("FILE_PATH"));
                rMap.setString("MEDIA_FILE", (String) resultList.get(0).get("MEDIA_FILE"));
            }
             // 교육 커리쿨럼
            rMap.add("paramCourseNo", rMap.get("courseno"));
            rMap.add("paramcSeqNo", rMap.get("cseqno"));
            // 과정 파일정보
            List<EduMap> fileMap = onlineEducationService.getFileInfoByCourseNo2(rMap);
            request.setAttribute("fileMap", fileMap);
            // 과정 자막 파일정보
            List<EduMap> txtFileMap = onlineEducationService.getTxtFileInfoByCourseNo(rMap);
            request.setAttribute("txtFileMap", txtFileMap);
            
            rMap.setString("title", SangsProperties.getProperty("Globals.onMain"));
            request.setAttribute("REQUEST_DATA", rMap);
            
            String mtCode = "SC";        
            request.setAttribute("courseList",commonService.getToSangsCodes(mtCode));
            request.setAttribute("bookInfo",onlineBookService.getCourseBookInfo(rMap));

        	Date sday = null;
        	Date eday = null;
        	Date now = new Date();
            // 기간운영일 경우
            if(eMap.getString("OPENTYPE").equals("D")){
            	SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");            	
            	try{
            		sday = dateFormat.parse(eMap.getString("APPLY_SDATE"));
            		String apply_edate = eMap.getString("APPLY_EDATE");
            		Integer len = apply_edate.length();
            		String apply_edate_front = apply_edate.substring(0,len-1);
            		String apply_edate_back = Integer.toString(Integer.parseInt(apply_edate.substring(len-1,len)) + 1);
            		eday = dateFormat.parse(apply_edate_front+apply_edate_back);   
            	}catch (ParseException e){
            		e.printStackTrace();
            	}        	
            	int sCompare = now.compareTo(sday);
            	int eCompare = now.compareTo(eday);
            	
            	if(sCompare > 0  && eCompare < 0){
            		request.setAttribute("applyAb","A");
            	}
            	else{
            		request.setAttribute("applyAb","N");            		
            	}           	
            }  
            else{
        		request.setAttribute("applyAb","A");            	
            }
        } 
        catch(Exception e){
            throw new FrontException(e);
        }

        return "ccedu/online/online_detail_form";
        
    }
    
    /**
     * 신청진행 Ajax
     * @param request
     * @param model
     * @param rMap
     * @return
     * @throws Exception
     */
    // TODO: 인권배움터 > 과정 신청 진행
    @RequestMapping(value = "/ccedu/online/common/apply_ajaxExec.do")
    public void applyAjaxExec(HttpServletRequest request, HttpServletResponse res, DataMap rMap) throws Exception {
    	System.out.println(rMap+"@@@@@@@@@@@@");
    	
        res.setContentType("text/html; charset=utf-8");
        PrintWriter out = res.getWriter();
        Gson gson = new Gson();
        String json = null ;
        EduMap rowData = null;
        
        //신청되어있는지 체크
        EduMap eMap = onlineEducationService.getCourseAppUserInfo(rMap);

        //중복신청인경우 중단
        if(eMap != null){
            json = "fail";
            eMap.put("classDiv", "Y");
            //중복신청이 아닌 경우 진행
        } else{
            onlineEducationService.insertCourApplyExec(rMap);
            eMap = onlineEducationService.getCourseAppUserInfo(rMap);
            rowData = onlineEducationService.getEdCourseSeqInfo(rMap);
            eMap.put("targetYn", rowData.getString("TARGETYN"));
            eMap.put("msg", rowData.getInt("CUSERNO"));
        }
        
        json =  gson.toJson(eMap);
        out.print(json);
        out.flush();
        out.close();

    }
    
    
    /**
     * 보증 관련 교육 확인
     * @param request
     * @param model
     * @param rMap
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/ccedu/online/common/applyGuarChkAjax.do")
    public void applyGuarChkAjax(HttpServletRequest request, HttpServletResponse res, DataMap rMap) throws Exception {
        res.setContentType("text/html; charset=utf-8");
        PrintWriter out = res.getWriter();
        Gson gson = new Gson();
        String json = null ;
        EduMap rowData = null;
        EduMap eMap = new EduMap();
        
        //신청되어있는지 체크
        EduMap eduMap = onlineEducationService.getCourseAppUserInfo(rMap);

        //중복신청인경우 중단
        if(eduMap != null){
        	json = "fail";
        	eduMap.put("classDiv", "Y");
        //중복신청이 아닌 경우 진행
        } else{
        	
        	//신청되어있는지 체크
            eMap = onlineEducationService.getGuarPttnNoChk(rMap);
            if(eMap.getString("GUAR_PTTN_NO_DIV").equals("Y")){
            	
            	rMap.setString("GUAR_PTTN_NO_DIV", eMap.getString("GUAR_PTTN_NO_DIV"));
            	onlineEducationService.insertCourApplyExec(rMap);
            } else {
            	json = "fail";
            	eMap.put("classDiv", "Q");
            }           
        }        
        json =  gson.toJson(eMap);
        out.print(json);
        out.flush();
        out.close();

    }
}