<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 클래스데스크 > 학생 > 시험관련 -->
<mapper namespace="com.webapp.classdesk.mapper.ClassdeskUserExamMapper">
	
	<!-- 시험 리스트 -->
	<select id="getUserLectExamList" parameterType="dmap" resultType="emap" >
	/* getUserLectExamList */
        SELECT * 
          FROM (
                SELECT
                    ROW_NUMBER() OVER (ORDER BY A.EXAMNO ASC) RNUM
                    , CASE WHEN (SELECT COUNT(1) FROM LMS_LE_EXAM_SECTION WHERE EXAMNO = A.EXAMNO) <![CDATA[>]]> 0 THEN 'Y'
                      ELSE 'N'
                      END AS RANDOM_YN
                    , A.EXAMNO
                    , A.CSEQNO
                    , A.EXAM_TYPE
                    , DECODE(A.EXAM_TYPE, 'M', '중간', 'F', '최종') AS EXAM_TYPE_NM
                    , A.TITLE
                    , A.SUMMARY
                    , TO_CHAR(A.EDATE, 'yyyy-mm-dd') EDATE
                    , TO_CHAR(A.SDATE, 'yyyy-mm-dd') SDATE 
                    , A.EVAL
                    , A.EXAM_TIME
                    , A.PUB_TYPE
                    , A.SETNO
                    , A.OPENYN
                    , A.RESULTYN
                    , A.USEYN    
                    , (SELECT COUNT(1) FROM LMS_LE_EXAM_APPLY WHERE EXAMNO = A.EXAMNO AND OPENYN = 'Y') AS SCNT
                    , (SELECT COUNT(1) FROM LMS_LE_COURSE_USER WHERE CSEQNO = A.CSEQNO) AS TOTCNT
                    , CASE
                        WHEN TO_CHAR(EDATE,'YYYYMMDD')  <![CDATA[<]]> TO_CHAR(SYSDATE,'YYYYMMDD') THEN 'Y' 
                        ELSE 'N'
                     END AS ENDYN 
                    , (SELECT CUSERNO AS CUSERNO FROM LMS_LE_EXAM_APPLY WHERE EXAMNO = A.EXAMNO AND CUSERNO = #{SES_CUSERNO}) AS CUSERNO
                    , (SELECT TO_CHAR(EXAM_SDATE,'YYYY. MM. DD') FROM LMS_LE_EXAM_APPLY WHERE EXAMNO = A.EXAMNO AND CUSERNO = #{SES_CUSERNO}) AS EXAM_SDATE
                    , (SELECT SUBMITYN AS USER_SUBMITYN FROM LMS_LE_EXAM_APPLY WHERE EXAMNO = A.EXAMNO AND CUSERNO = #{SES_CUSERNO}) AS USER_SUBMITYN
                    , CASE 
                        WHEN TO_CHAR(SDATE,'YYYYMMDD HH24:MI:SS')  <![CDATA[<=]]>   TO_CHAR(SYSDATE,'YYYYMMDD HH24:MI:SS') 
                            AND TO_CHAR(EDATE,'YYYYMMDD HH24:MI:SS')  <![CDATA[>=]]> TO_CHAR(SYSDATE,'YYYYMMDD HH24:MI:SS') THEN 'Y' <!-- 시험 응시기간내에 응시가능 유무 -->
                        ELSE 'N'
                      END AS SAVEYN 
                    , (SELECT VAL FROM LMS_LE_EXAM_APPLY WHERE EXAMNO = A.EXAMNO AND CUSERNO = #{SES_CUSERNO}) AS SCORE 
                    
                    , (SELECT EVAL_EXAM_FINAL FROM LMS_ED_COURSE_SEQ WHERE CSEQNO = A.CSEQNO ) AS EVAL_EXAM_FINAL
                    
                FROM LMS_LE_EXAM A
                WHERE A.CSEQNO = #{SES_CSEQNO}
                AND   A.OPENYN = 'Y'
                ORDER BY EXAMNO ASC
               ) B,
               (    
                SELECT CASE
                           WHEN TO_CHAR(ENDDATE,   'YYYYMMDD') <![CDATA[<]]> TO_CHAR(SYSDATE,'YYYYMMDD') THEN 'Y'
                           ELSE 'N'
                       END AS OPEN_A_ENDYN, 
                       CASE 
                           WHEN TO_CHAR(STARTDATE, 'YYYYMMDD') <![CDATA[<=]]> TO_CHAR(SYSDATE,'YYYYMMDD') AND TO_CHAR(ENDDATE,'YYYYMMDD') <![CDATA[>=]]> TO_CHAR(SYSDATE,'YYYYMMDD') THEN 'Y'
                           ELSE 'N'
                       END AS OPEN_A_SAVEYN  
                  FROM LMS_LE_COURSE_USER 
                 WHERE CUSERNO = #{SES_CUSERNO}
               ) C
	</select>
	
	
	
	<select id="getUserLectExamAppCnt" parameterType="dmap" resultType="emap">
		SELECT 
			COUNT(1) AS EXAM_APP_CNT
		FROM LMS_LE_EXAM_APPLY A, LMS_LE_EXAM_HIST B
		WHERE  A.CUSERNO = B.CUSERNO
		AND    A.EXAMNO = B.EXAMNO
		AND    A.CUSERNO = #{SES_CUSERNO}
		AND    A.EXAMNO =  #{examNo}
	
	</select>
	
	
	
	<!-- 강의실 시험 응시내역 저장 -->
	<insert id="insertLectExamApp" parameterType="dmap" >
    	 INSERT INTO LMS_LE_EXAM_APPLY(
    	 		 CUSERNO
    	 		 , EXAMNO
    	 		 , EXAM_SDATE
    	 		 , EXAM_EDATE
    	 		 , EXAM_TIME
    	 		 , SUBMITYN
    	 		 , ISPASS
    	 		 , COURSENO
    	 		 , CSEQNO
    	 		 , USERNO
    	 		)
      	  VALUES(
    	  		   #{SES_CUSERNO}
   	  			 , #{examNo} 
   	  			 , SYSDATE
   	  			 , TO_DATE(#{examEdate},'YYYY-MM-DD')
   	  			 , #{examTime}
   	  			 , #{submitYn}
   	  			 , #{isPass}
   	  			 , #{SES_COURSENO}
   	  			 , #{SES_CSEQNO}
   	  			 , #{SES_USERNO}
    	  		)

	</insert>
	
	
	<insert id="insertUserLectExamSetAppHst" parameterType="dmap">
		 INSERT INTO LMS_LE_EXAM_HIST(
    	 		 CUSERNO
    	 		 , QSEQ
    	 		 , EXAMNO
    	 		 , QNO
    	 		)
      	 	VALUES(
    	  		   #{SES_CUSERNO}
    	  		   , #{qseq}
   	  			   , #{examNo} 
   	  			   , #{qNo}
    	  		)
	</insert>  
	
	<insert id="insertUserLectExamBinderAppHst" parameterType="dmap">
		 INSERT INTO LMS_LE_EXAM_HIST(
    	 		 CUSERNO
    	 		 , QSEQ
    	 		 , EXAMNO
    	 		 , QNO
    	 		)
      	 	VALUES(
    	  		   #{SES_CUSERNO}
    	  		   , #{qseq}
   	  			   , #{examNo} 
   	  			   , #{qNo}
    	  		)
	</insert>  
	
	
	<select id="getUserLectExamAppMaxSeq" parameterType="dmap" resultType="emap">
		SELECT 
			NVL(MAX(QSEQ)+1, 1) AS MAX_NO
		FROM LMS_LE_EXAM_APPLY A, LMS_LE_EXAM_HIST B
		WHERE  A.CUSERNO = B.CUSERNO
		AND    A.EXAMNO = B.EXAMNO
		AND    A.CUSERNO = #{SES_CUSERNO}
		AND    A.EXAMNO =  #{examNo}
	</select>
	
	<!-- 응답 문항 수 validation -->
    <select id="getItemCnt" parameterType="dmap" resultType="int">
    	/* getItemCnt */
   		SELECT 
			COUNT(*) AS ITEMCNT
		FROM 
			LMS_LE_EXAM_QUIZ A
		WHERE A.EXAMNO =  #{examNo}
		AND QTYPE IN (1,2)
    </select>
    
	<!-- 수강생 시험 랜덤 리스트 -->
	<select id="getUserLectExamRdmAppHistList" resultType="eMap" parameterType="dmap">
		/* getUserLectExamRdmAppHistList */
        SELECT 
            D.QNO
            , D.QTYPE
            , D.QSUBJECT
            , D.A01
            , D.A02
            , D.A03
            , D.A04
            , D.A05
            , D.RCODE
            , D.SUMMARY
            , D.WDATE
            , D.WRITER
            , D.USEYN
            , D.COURSENO
            , D.SECNO
            , C.CUSERNO
            , C.QSEQ
            , C.ITEMSEQ
            , DECODE(C.ITEMSEQ, '1', 'O', '2', 'X') AS ITEMSEQ_OX
            , C.ISRIGHT
            , B.VAL AS SUM_VAL
            , C.VAL
            , A.PUB_TYPE
            , A.TITLE
            , A.EXAMNO
            , A.EXAM_TIME
            , A.EXAM_TIME*60 AS EXAM_TIME_MS
            , B.EXAM_TIME AS USER_EXAM_TIME
            , F.UNITY_ID
            , F.MBERNM
            , DECODE(A.EXAM_TYPE, 'M', '중간', 'F', '최종') AS EXAM_TYPE_NM
            , A.EVAL
            , G.ALLOT   /* 정답 배점 */
		FROM LMS_LE_EXAM A, LMS_LE_EXAM_APPLY B, LMS_LE_EXAM_HIST C, LMS_LE_EXAM_QUIZ D , LMS_CT_UNITY_MBER F, LMS_LE_EXAM_SECTION G
		WHERE 1=1
		AND A.EXAMNO = B.EXAMNO 
		AND B.EXAMNO = C.EXAMNO 
		AND B.CUSERNO = C.CUSERNO                                                        
        AND B.USERNO = F.UNITY_MBERNO
		AND C.QNO = D.QNO 
		AND G.EXAMNO = D.EXAMNO 
		AND G.SECNO = D.SECNO
		AND D.USEYN = 'Y'
		AND G.USEYN = 'Y'
		AND A.EXAMNO = #{examNo}
		AND D.EXAMNO = #{examNo}
		AND B.CSEQNO = #{SES_CSEQNO}
		AND B.CUSERNO = #{cUserNo}
		ORDER BY D.QNO
	</select>
	
	<select id="getUserLectExamRdmAppHistListB" resultType="eMap" parameterType="dmap">
		SELECT 
			 A.CUSERNO
			,A.EXAMNO
			,A.EXAM_SDATE
			,A.EXAM_EDATE
			,A.EXAM_TIME
			,A.SUBMITYN
			,A.ISPASS
			,A.VAL_DATE
			,A.VAL
			,A.COURSENO
			,A.CSEQNO
			,A.USERNO
			,(SELECT COUNT(*) FROM LMS_LE_EXAM_HIST WHERE EXAMNO = A.EXAMNO AND CUSERNO = #{SES_CUSERNO} AND ISRIGHT = 'Y') AS VAL_CNT
		 	FROM LMS_LE_EXAM_APPLY A
			WHERE CUSERNO = #{SES_CUSERNO}
			AND USERNO = #{SES_USERNO}
	</select>
	
	<!-- 수강생 시험 세트 리스트 -->
	<select id="getUserLectExamSetAppHistList" resultType="eMap" parameterType="dmap">
		/* getUserLectExamSetAppHistList */
		SELECT 
            D.*
            , C.CUSERNO
            , C.QSEQ
            , C.ITEMSEQ
            , DECODE(C.ITEMSEQ, '1', 'O', '2', 'X') AS ITEMSEQ_OX
            , C.ISRIGHT
            , B.VAL AS SUM_VAL
            , C.VAL
            , A.PUB_TYPE
            , A.TITLE
            , A.EXAMNO
            , A.EXAM_TIME
            , A.EXAM_TIME*60 AS EXAM_TIME_MS
            , B.EXAM_TIME AS USER_EXAM_TIME
            , E.UNITY_ID
		    , E.MBERNM
            , DECODE(A.EXAM_TYPE, 'M', '중간', 'F', '최종') AS EXAM_TYPE_NM
            , A.EVAL
            , D.ALLOT
        FROM LMS_LE_EXAM A, LMS_LE_EXAM_APPLY B, LMS_LE_EXAM_HIST C, LMS_LE_EXAM_SQUIZ D, LMS_CT_UNITY_MBER E
        WHERE 1=1
        AND A.EXAMNO = B.EXAMNO 
        AND B.EXAMNO = C.EXAMNO 
        AND B.CUSERNO = C.CUSERNO
        AND C.QNO = D.QNO
        AND B.USERNO = E.UNITY_MBERNO
		AND A.EXAMNO = #{examNo}
		AND B.CSEQNO = #{SES_CSEQNO}
		AND B.CUSERNO = #{cUserNo}
		AND D.USEYN = 'Y'
		ORDER BY C.QSEQ
	</select>

	<!-- 수강생 시험 바인더 리스트 -->
	<select id="getUserLectExamBinderAppHistList" resultType="emap" parameterType="dmap">
		/* getUserLectExamBinderAppHistList */
		SELECT 
            D.*
            , C.CUSERNO
            , C.QSEQ
            , C.ITEMSEQ
            , DECODE(C.ITEMSEQ, '1', 'O', '2', 'X') AS ITEMSEQ_OX
            , C.ISRIGHT
            , B.VAL AS SUM_VAL
            , C.VAL
            , A.PUB_TYPE
            , A.TITLE
            , A.EXAMNO
            , A.EXAM_TIME
            , A.EXAM_TIME*60 AS EXAM_TIME_MS
            , B.EXAM_TIME AS USER_EXAM_TIME
            , E.UNITY_ID
            , E.MBERNM
            , DECODE(A.EXAM_TYPE, 'M', '중간', 'F', '최종') AS EXAM_TYPE_NM
            , A.EVAL
            , D.ALLOT
        FROM LMS_LE_EXAM A, LMS_LE_EXAM_APPLY B, LMS_LE_EXAM_HIST C, LMS_LE_EXAM_QUIZ D, LMS_CT_UNITY_MBER E
        WHERE 1=1
        AND A.EXAMNO = B.EXAMNO 
        AND B.EXAMNO = C.EXAMNO 
        AND B.CUSERNO = C.CUSERNO
        AND A.EXAMNO = D.EXAMNO
        AND C.QNO = D.QNO
        AND B.USERNO = E.UNITY_MBERNO 
		AND A.EXAMNO = #{examNo}
		AND B.CSEQNO = #{SES_CSEQNO}
		AND B.CUSERNO = #{cUserNo}
		AND D.USEYN = 'Y'
		ORDER BY C.QSEQ
	</select>
	
	<!-- 사용자 실시간 응시시간 저장 -->
	<update id="updateExamRealTmTime" parameterType="dmap" >
		UPDATE LMS_LE_EXAM_APPLY
			SET EXAM_TIME = #{examTime}
			, SUBMITYN = #{submitYn}
			<if test='submitYn == "Y"'>
			, EXAM_EDATE = SYSDATE
			 </if>
		WHERE 	CUSERNO = #{SES_CUSERNO}
		AND 	EXAMNO = #{examNo}
	
	</update>
	
	<!-- 사용자 실시간 정답 저장 -->
	<update id="updateExamRealTmAns" parameterType="dmap" >
		UPDATE LMS_LE_EXAM_HIST A
			SET 
			<if test='qType == "1"'>
				ITEMSEQ = #{itemSeq}
			 </if>
			<if test='qType == "2"'>
				ITEMSEQ = #{itemSeq}
			 </if>
			 <if test='file01 != null and file01 != "" '>
				, FILE01 = #{file01}
			 </if>
		WHERE 	CUSERNO = #{SES_CUSERNO}
		AND 	EXAMNO  = #{examNo}
		AND     QSEQ    = #{qSeq}
	
	</update>
	
		<!-- 과정정보  -->
	<select id="getOpenTypeInfo" parameterType="dmap" resultType="emap" >
		SELECT NVL(OPENTYPE, 'D')OPENTYPE 
		FROM LMS_ED_COURSE_SEQ 
		WHERE CSEQNO = #{SES_CSEQNO}
	</select>
	
		<!-- 시험 제출정보  -->
	<select id="getExamApplyHistList" parameterType="dmap"  resultType="emap" >
		SELECT QSEQ
			, QNO
			, ITEMSEQ
			, ROW_NUMBER() OVER (ORDER BY QNO ASC) RNUM
		FROM LMS_LE_EXAM_HIST
		WHERE CUSERNO = #{SES_CUSERNO}
		AND EXAMNO = #{examNo}
		ORDER BY QNO
	</select>
	
	<!-- Bind문제유형 시험 문제정보  -->
	<select id="examQuizBindInfo" parameterType="dmap"  resultType="emap" >
		/* examQuizBindInfo */
		SELECT ALLOT 
			, RCODE
		FROM LMS_LE_EXAM_QUIZ  
		WHERE EXAMNO = #{examNo}
		AND QNO = #{qNo}
		ORDER BY QNO
	</select>
	
	<!-- Random문제유형 시험 문제정보  -->
	<select id="examQuizRandomInfo" parameterType="dmap"  resultType="emap" >
		SELECT
                T2.ALLOT,
                T1.QTYPE,
                T1.RCODE
         FROM
                LMS_LE_EXAM_QUIZ T1,
                LMS_LE_EXAM_SECTION T2
         WHERE
                T1.SECNO = T2.SECNO
                AND T1.EXAMNO = T2.EXAMNO
                AND T1.COURSENO = #{SES_COURSENO}
                AND T2.EXAMNO = #{examNo}
                AND T1.QNO = #{qNo}
	</select>
	
	<!-- Set문제유형 시험 문제정보  -->
	<select id="examQuizSetInfo" parameterType="dmap"  resultType="emap" >
		 SELECT
                T1.ALLOT,
                T1.QTYPE,
                T1.RCODE
         FROM
                LMS_LE_EXAM_SQUIZ T1,
                LMS_LE_EXAM_SET T2,
                LMS_LE_EXAM T3
         WHERE
                T1.SETNO = T2.SETNO
                AND T2.SETNO = T3.SETNO
                AND T1.COURSENO = #{SES_COURSENO}
                AND T3.EXAMNO = #{examNo}
                AND T1.QNO = #{qNo}
	</select>
	
	<!-- 시험 응시내역 점수 수정  -->
	<update id="updateExamApplyHist">
		/* updateExamApplyHist */
		UPDATE LMS_LE_EXAM_HIST C
		SET 
			ISRIGHT = #{ISRIGHT}
			<if test='ISRIGHT != null and ISRIGHT == "Y"'>
			, VAL = (
						 SELECT ROUND(100 / COUNT(*),2) AS VAL
						   FROM LMS_LE_EXAM_QUIZ
						 WHERE EXAMNO = #{examNo}
					)
			</if>
			<if test='ISRIGHT != null and ISRIGHT == "N"'>
			, VAL = 0
			</if>
		WHERE CUSERNO = #{SES_CUSERNO}
		AND EXAMNO = #{examNo}
		AND QNO = #{qNo}
		AND QSEQ = #{qSeq}
	</update>
	
	<!-- 시험 응시내역 채점점수 합계 수정  -->
	<update id="updateExamApply">
		/* updateExamApply */
		UPDATE LMS_LE_EXAM_APPLY SET 
			  VAL = (SELECT SUM(VAL) FROM LMS_LE_EXAM_HIST WHERE CUSERNO = #{SES_CUSERNO} AND EXAMNO = #{examNo})
			, VAL_DATE = SYSDATE
			, SUBMITYN = 'Y'
		WHERE CUSERNO = #{SES_CUSERNO}
		AND EXAMNO = #{examNo}
	</update>
	
	<!-- 사전/사후시험 체크 -->
    <select id="getLeExamBeAfterCnt" parameterType="dmap" resultType="int">
    	SELECT COUNT(*) FROM LMS_LE_EXAM_APPLY
		WHERE EXAMNO IN (
		  SELECT EXAMNO FROM LMS_LE_EXAM
		  WHERE CSEQNO = #{cseqno}
		  AND EXAM_TYPE = #{examType}
		  AND USEYN = 'Y'
		)
		AND CUSERNO = #{SES_CUSERNO}
		<!-- AND SUBMITYN = 'Y' -->
    </select>
    
    <!-- 사전시험 유무 체크 -->
    <select id="getLeExamBeChkYn" parameterType="dmap" resultType="int">
    	SELECT COUNT(*) FROM LMS_LE_EXAM WHERE CSEQNO = #{cseqno}
          AND EXAM_TYPE = #{examType}
          AND USEYN = 'Y'
    </select>
    
    <!-- 사후시험 점수 > 수강테이블 정보에 업데이트 -->
	<update id="updateLeCourseUserInfo" parameterType="dmap">
		UPDATE 
		    LMS_LE_COURSE_USER SET  
			    EXAM_FINAL_VAL = ROUND((SELECT SUM(VAL) FROM LMS_LE_EXAM_HIST WHERE CUSERNO = #{SES_CUSERNO} AND EXAMNO = #{examNo}), 1)
			    , FINAL_VAL = NVL(FINAL_VAL,0) + ROUND((SELECT SUM(VAL) FROM LMS_LE_EXAM_HIST WHERE CUSERNO = #{SES_CUSERNO} AND EXAMNO = #{examNo}), 1)
		WHERE CUSERNO = #{SES_CUSERNO} 
	</update>
	
	<!-- 최종점수, 수료코드 발급 -->
	<update id="updateLeCoursePassInfo" parameterType="dmap">
		UPDATE 
		    LMS_LE_COURSE_USER SET  
			    ISPASS = #{isPass}
			    <if test="compCode != null and compCode != ''">
					, COMPCODE = #{compCode}
					, COMPDATE = SYSDATE
				</if>
		WHERE CUSERNO = #{SES_CUSERNO} 
	</update>
	
	<!-- 성적 점수 합계  -->
	<select id="getTotalSumInfo" parameterType="dmap"  resultType="float" >
		/* getTotalSumInfo */
		 SELECT FINAL_VAL
		 FROM LMS_LE_COURSE_USER 
		 WHERE 1 = 1
		 AND CUSERNO = #{SES_CUSERNO}
		 AND USEYN = 'Y'
	</select>
	
	<!-- 수료기준점수  -->
	<select id="getCseqCompValInfo" parameterType="dmap"  resultType="int" >
		/* getCseqCompValInfo */
	        SELECT COMP_VAL
	          FROM LMS_ED_COURSE_SEQ 
	         WHERE 1 = 1 
	            AND CSEQNO = #{SES_CSEQNO}
	</select>
	
	<!-- 시험여부 체크  -->
	<select id="selectTestChk" parameterType="dmap" resultType="emap" >
	     SELECT CASE WHEN (SELECT COUNT(*) FROM LMS_LE_EXAM_APPLY WHERE CUSERNO = #{SES_CUSERNO} ) 
	                              >= ( SELECT COUNT(*) FROM LMS_LE_EXAM WHERE OPENYN = 'Y' AND USEYN = 'Y' AND CSEQNO = #{SES_CSEQNO} AND SYSDATE BETWEEN SDATE AND EDATE )
            THEN 'Y'
            ELSE 'N'
             END TEST_CHK
          FROM DUAL
	</select>
</mapper>
