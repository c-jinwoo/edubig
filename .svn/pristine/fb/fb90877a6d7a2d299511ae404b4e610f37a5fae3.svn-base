package com.sangs.support;

import java.io.File;
import java.io.IOException;
import java.util.Iterator;

import javax.servlet.http.HttpServletRequest;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.sangs.util.StringUtil;
import com.sangs.util.FileUtil;

/**
 * @제목 FileUploadUtil
 * @설명 실제 파일업로드 수행
 * @작성자 이내희
 * @마지막날짜 2010.12.17
 */
public class FileUploadUtil {

    /* Log를 위한 정의 */
    private Logger log = LogManager.getLogger(this.getClass());

    /**
     * 파일 업로드를 처리해 준다.
     * @param request
     * @return
     * @throws IOException
     */
    public DataMap fileUpload(HttpServletRequest request, String ADDFILE_ROOT_PATH,
            int ADDFILE_MAXSIZE) throws Exception {

        //return requestMap
        DataMap map = new DataMap();
        DataMap fileBox = new DataMap();

        MultipartHttpServletRequest mRequest = (MultipartHttpServletRequest)request;

        
        // upload 폴더 없을경우 생성.
        if (!new File(ADDFILE_ROOT_PATH).exists()) new File(ADDFILE_ROOT_PATH).mkdirs();

        /*
        DiskFileItemFactory factory = new DiskFileItemFactory();
        factory.setSizeThreshold(ADDFILE_MAXSIZE);
        factory.setRepository(new File(ADDFILE_ROOT_PATH));

        ServletFileUpload upload = new ServletFileUpload(factory);
        upload.setSizeMax(ADDFILE_MAXSIZE);
        */

        String fullDir = ""; //파일의 풀경로 	 ex) D:/temp/upload/board
        String dir = ""; //파일 저장 위치.  ex) /board

        try {

            /*
            List items = upload.parseRequest(request);
            Iterator iter = items.iterator();
            */
            Iterator<String> iter = mRequest.getFileNames();
            
            
            if(request.getAttribute("UPLOAD_DIR") != null){
            	dir = request.getAttribute("UPLOAD_DIR").toString();
            }
            
            //업로드 저장 경로가 안들어왔을경우 Default 셋팅

            if (dir == null ) {
                fullDir = ADDFILE_ROOT_PATH + File.separator + "board";
            } else {
                fullDir = ADDFILE_ROOT_PATH + File.separator + dir;
            }
            //fullDir = StringUtil.getContentReplace(fullDir); // ':' 를 replace시 경로가 c:\경로가 c\로 변해버려서 정상적인 파일 생성 / 저장이 불가
            String eFullDir = fullDir;
            
            // 저장 폴더 없을 경우 생성.
            if (!new File(eFullDir).exists()) {
                new File(eFullDir).mkdirs();
            }
            
            int fileCnt = 0;
            int fileCheckCnt = 0;
            while (iter.hasNext()) {
                MultipartFile item = mRequest.getFile(iter.next());
                /*
                String itemName = item.getName();
                itemName = itemName.substring(itemName.lastIndexOf("\\") + 1);
                */


                String orgFileName = item.getOriginalFilename(); //사용자가 올린  파일 이름.
                String fileExt = orgFileName.substring(orgFileName.lastIndexOf(".") + 1, orgFileName.length());
                
                String ccedu = (String) request.getAttribute("cceduOrgFileName");
                
                String sysFileName = "";
                
                if(ccedu != null ){
                	sysFileName = ccedu+"."+fileExt; //실제 저장되는 파일 이름.
                } else {
                	sysFileName = Long.toString(System.currentTimeMillis()) + "_" + item.getOriginalFilename(); //실제 저장되는 파일 이름.
                }
                

                // 파일 확장자 명체크 로직 추가
                fileCheckCnt++;
                boolean checkFile = FileUploadCheckUtil.checkFileExt(orgFileName, ADDFILE_ROOT_PATH, 1);
                if (checkFile == true) {
                    // 시스템에 저장되는 파일.
                	//fullDir = StringUtil.getContentReplace(fullDir);
                	String eSeparator = File.separator;
                    File sysFile = FileUtil.getConvertFile(new File(fullDir + eSeparator + sysFileName));
                    // 파일 저장
                    item.transferTo(sysFile);
                    
                    fileBox.addString("uploadFileFulltPath", fullDir.replace("\\", "/")); //전체 저장 위치.
                    fileBox.addString("uploadFilePath", dir); //저장 위치.
                    fileBox.addString("uploadFileOrgName", orgFileName); //사용자가 올린 파일명.
                    fileBox.addString("uploadFileSaveName", sysFileName); //실제 저장되는 파일 이름.
                    fileBox.addLong("uploadFileSize", sysFile.length()); //저장파일사이즈 
                    fileBox.addString("uploadFileExt", fileExt); //파일확장자
                    fileBox.addString("fileUploadOk", "Y"); //등록여부 
                    fileBox.addString("uploadFieldName", item.getName()); // 첨부파일 필드명
                    fileBox.addString("uploadSeq", item.getName().substring(item.getName().length() - 1)); // 첨부파일 순서 구분

                    fileCnt++;
                }
            }

            map.add("UPLOAD_FILE", fileBox);
            map.add("UPLOAD_FILE_CNT", fileCnt);
            map.add("UPLOAD_FILE_TMP", fileCheckCnt);

        } catch (IOException ex) {
            throw ex;
        } catch (Exception ex) {
            throw ex;

        }

        return map;
    }

    /**
     * 파일 업로드를 처리해 준다.(단일파일)
     * @param request
     * @return
     * @throws IOException
     */
    public DataMap singleFileUpload(HttpServletRequest request, MultipartFile item, String ADDFILE_ROOT_PATH, int ADDFILE_MAXSIZE) throws Exception {

        //return requestMap
        DataMap map = new DataMap();
        DataMap fileBox = new DataMap();

        // upload 폴더 없을경우 생성.
        if (!new File(ADDFILE_ROOT_PATH).exists()) new File(ADDFILE_ROOT_PATH).mkdirs();

        String fullDir = ""; //파일의 풀경로 	 ex) D:/temp/upload/board
        String dir = ""; //파일 저장 위치.  ex) /board

        try {
            dir = request.getParameter("UPLOAD_DIR");

            dir = StringUtil.getContentReplace(dir);
            //업로드 저장 경로가 안들어왔을경우 Default 셋팅

            if (dir.equals("")) {
                fullDir = ADDFILE_ROOT_PATH + File.separator + "temp";
            } else {
                fullDir = ADDFILE_ROOT_PATH + File.separator + dir;
            }
            
            String eFullDir = fullDir;
            
            // 저장 폴더 없을 경우 생성.
            if (!new File(eFullDir).exists()) {
                new File(eFullDir).mkdirs();

            }
        
            String orgFileName = item.getOriginalFilename(); //사용자가 올린  파일 이름.
            String fileExt = orgFileName.substring(orgFileName.lastIndexOf(".") + 1, orgFileName.length());

            String sysFileName = Long.toString(System.currentTimeMillis()) + "_" + item.getOriginalFilename(); //실제 저장되는 파일 이름.

            // 파일 확장자 명체크 로직 추가
            boolean checkFile = FileUploadCheckUtil.checkFileExt(orgFileName, ADDFILE_ROOT_PATH, 1);
            if (checkFile == true) {
                // 시스템에 저장되는 파일.
            	//fullDir = StringUtil.getContentReplace(fullDir);
            	String eSeparator = File.separator;
                File sysFile = FileUtil.getConvertFile(new File(fullDir + eSeparator + sysFileName));
                // 파일 저장
                item.transferTo(sysFile);

                fileBox.addString("uploadFileFulltPath", fullDir); //전체 저장 위치.
                fileBox.addString("uploadFilePath", dir); //저장 위치.
                fileBox.addString("uploadFileOrgName", orgFileName); //사용자가 올린 파일명.
                fileBox.addString("uploadFileSaveName", sysFileName); //실제 저장되는 파일 이름.
                fileBox.addLong("uploadFileSize", sysFile.length()); //저장파일사이즈 
                fileBox.addString("uploadFileExt", fileExt); //파일확장자
                fileBox.addString("fileUploadOk", "Y"); //등록여부 
                fileBox.addString("uploadFieldName", item.getName()); // 첨부파일 필드명
                fileBox.addString("uploadSeq", item.getName().substring(item.getName().length() - 1)); // 첨부파일 순서 구분

            }

            map.add("UPLOAD_FILE", fileBox);

        } catch (IOException ex) {
            throw ex;
        } catch (Exception ex) {
            throw ex;
        }

        return map;
    }

}